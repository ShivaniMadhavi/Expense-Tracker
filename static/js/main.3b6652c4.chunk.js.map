{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","onAdd","state","amount","data","date","Date","toISOString","type","totalamount","Number","setState","previousState","transactions","errorMsg","onRemove","onChange","e","target","value","TransactionHistory","this","map","index","className","id","name","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAoGeA,E,kDAhGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,MAAO,WACL,GAAG,EAAKC,MAAMC,OACd,CACE,IAAIC,EAAK,CACPC,MAAK,IAAIC,MAAOC,cAChBJ,OAAO,EAAKD,MAAMC,OAClBK,KAAK,OAGFC,EAAaC,OAAO,EAAKR,MAAMO,aAAeC,OAAO,EAAKR,MAAMC,QACrE,EAAKQ,UAAS,SAAAC,GAAa,MAAK,CAC9BC,aAAa,GAAD,mBAAMD,EAAcC,cAApB,CAAkCT,IAC9CK,YAAYA,EACZN,OAAO,YAMT,EAAKQ,SAAS,CACZG,SAAS,yBA9BI,EAmCnBC,SAAW,WACT,GAAG,EAAKb,MAAMC,OACd,CACE,IAAIC,EAAK,CACPC,MAAK,IAAIC,MAAOC,cAChBJ,OAAO,EAAKD,MAAMC,OAClBK,KAAK,UAEHC,EAAcC,OAAO,EAAKR,MAAMO,aAAeC,OAAO,EAAKR,MAAMC,QACrE,EAAKQ,UAAS,SAAAC,GAAa,MAAK,CAC9BC,aAAa,GAAD,mBAAMD,EAAcC,cAApB,CAAkCT,IAC9CK,YAAYA,EACZN,OAAO,YAKT,EAAKQ,SAAS,CACZG,SAAS,yBArDI,EA2DnBE,SAAU,SAACC,GACT,EAAKN,SAAS,CACZR,OAAOc,EAAEC,OAAOC,MAChBL,SAAS,MA5DX,EAAKZ,MAAQ,CACTC,OAAQ,GACRM,YAAY,EACZI,aAAa,GACbC,SAAS,IANI,E,0CAkEnB,WAEE,IACMM,EADeC,KAAKnB,MAAnBW,aACiCS,KAAI,SAAClB,EAAKmB,GAAN,OAAgB,4BAAgBnB,EAAKC,KAAM,MAAMD,EAAKD,OAAO,MAAMC,EAAKI,MAAhDe,MAEpE,OACE,sBAAKC,UAAU,MAAf,UACE,yDACE,qBAAKC,GAAG,YAAR,SACE,sBAAKA,GAAG,YAAR,UACE,+CAAkBJ,KAAKnB,MAAMO,eAAoB,uBACjD,uBAAOD,KAAK,SAASkB,KAAK,SAASV,SAAUK,KAAKL,SAAUG,MAAOE,KAAKnB,MAAMC,SAAS,uBACvF,wBAAQwB,QAASN,KAAKpB,MAAtB,iBAHF,IAG4C,wBAAQ0B,QAASN,KAAKN,SAAtB,oBAA+C,uBACzF,uBAAOS,UAAU,WAAjB,SAA6BH,KAAKnB,MAAMY,gBAI5C,qBAAKW,GAAG,YAAR,SACE,sBAAMD,UAAU,qBAAhB,UACE,gDACCJ,c,GAvFGQ,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b6652c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        amount: \"\",\n        totalamount:0,\n        transactions:[],\n        errorMsg:\"\"\n    };\n  }\n\n  onAdd =()=>{\n    if(this.state.amount)\n    {\n      var data={\n        date:new Date().toISOString(),\n        amount:this.state.amount,\n        type:\"Add\"\n      }\n  \n      let  totalamount= Number(this.state.totalamount) + Number(this.state.amount)\n      this.setState(previousState => ({\n        transactions: [...previousState.transactions, data],\n        totalamount:totalamount,\n        amount:\"\"\n      }));\n\n    }\n    else\n    {\n      this.setState({\n        errorMsg:\"Please Enter Amount\"\n      })\n    }\n  }\n\n  onRemove = () => {\n    if(this.state.amount)\n    {\n      var data={\n        date:new Date().toISOString(),\n        amount:this.state.amount,\n        type:\"Remove\"\n      }\n      let totalamount = Number(this.state.totalamount) - Number(this.state.amount)\n      this.setState(previousState => ({\n        transactions: [...previousState.transactions, data],\n        totalamount:totalamount,\n        amount:\"\"\n      }));\n    }\n    else\n    {\n      this.setState({\n        errorMsg:\"Please Enter Amount\"\n      })\n\n    }\n  }\n\n  onChange =(e)=>{\n    this.setState({\n      amount:e.target.value,\n      errorMsg:\"\"\n    })\n  }\n\n  render()\n  {\n    const {transactions}=this.state\n    const TransactionHistory = transactions.map((data,index) => <p key={index}>{data.date +\" - \"+data.amount+\" - \"+data.type}</p>);\n\n    return (\n      <div className=\"App\">\n        <h1>Expense Tracker - Basic</h1>\n          <div id=\"outer-div\">\n            <div id=\"inner-div\">\n              <label>Balance : {this.state.totalamount}</label><br/>\n              <input type=\"number\" name=\"amount\" onChange={this.onChange} value={this.state.amount}/><br/>\n              <button onClick={this.onAdd}>Add</button> <button onClick={this.onRemove}>Remove</button><br/>\n              <label className=\"errorMsg\">{this.state.errorMsg}</label>\n            </div>\n          </div>\n\n          <div id=\"outer-div\">\n            <div  className=\"transactionHistory\">\n              <b>Transactions : </b>\n              {TransactionHistory}\n            </div>\n          </div>\n        \n      </div>\n    );\n  }\n \n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}